

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri Mar 28 14:24:23 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F2431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     _INTCONbits	set	4082
    20  0000                     _IPR1bits	set	3999
    21  0000                     _OSCCON	set	4051
    22  0000                     _PIE1bits	set	3997
    23  0000                     _PIR1bits	set	3998
    24  0000                     _RCREG	set	4014
    25  0000                     _RCSTA	set	4011
    26  0000                     _RCSTAbits	set	4011
    27  0000                     _SPBRG	set	4015
    28  0000                     _SPBRGH	set	4016
    29  0000                     _TRISCbits	set	3988
    30  0000                     _TXSTA	set	4012
    31  0000                     _TXSTAbits	set	4012
    32                           
    33 ;; *************** function _low_isr *****************
    34 ;; Defined at:
    35 ;;		line 70 in file "interrupts.c"
    36 ;; Parameters:    Size  Location     Type
    37 ;;		None
    38 ;; Auto vars:     Size  Location     Type
    39 ;;		None
    40 ;; Return value:  Size  Location     Type
    41 ;;		None               void
    42 ;; Registers used:
    43 ;;		None
    44 ;; Tracked objects:
    45 ;;		On entry : 0/0
    46 ;;		On exit  : 0/0
    47 ;;		Unchanged: 0/0
    48 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
    49 ;;      Params:         0       0       0       0
    50 ;;      Locals:         0       0       0       0
    51 ;;      Temps:         17       0       0       0
    52 ;;      Totals:        17       0       0       0
    53 ;;Total ram usage:       17 bytes
    54 ;; Hardware stack levels used:    1
    55 ;; Hardware stack levels required when called:    2
    56 ;; This function calls:
    57 ;;		Nothing
    58 ;; This function is called by:
    59 ;;		Interrupt level 1
    60 ;; This function uses a non-reentrant model
    61 ;;
    62                           
    63                           	psect	intcodelo
    64  000018                     __pintcodelo:
    65                           	opt stack 0
    66                           
    67                           ; #config settings
    68  000018                     _low_isr:
    69                           	opt stack 26
    70                           
    71                           ;incstack = 0
    72  000018  CFD8 F001          	movff	status,??_low_isr
    73  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
    74  000020  CFE0 F003          	movff	bsr,??_low_isr+2
    75  000024  CFFA F004          	movff	pclath,??_low_isr+3
    76  000028  CFFB F005          	movff	pclatu,??_low_isr+4
    77  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
    78  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
    79  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
    80  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
    81  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
    82  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
    83  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
    84  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
    85  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
    86  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
    87  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
    88  000058  CFF5 F011          	movff	tablat,??_low_isr+16
    89  00005C  C011  FFF5         	movff	??_low_isr+16,tablat
    90  000060  C010  FFF8         	movff	??_low_isr+15,tblptru
    91  000064  C00F  FFF7         	movff	??_low_isr+14,tblptrh
    92  000068  C00E  FFF6         	movff	??_low_isr+13,tblptrl
    93  00006C  C00D  FFF4         	movff	??_low_isr+12,prodh
    94  000070  C00C  FFF3         	movff	??_low_isr+11,prodl
    95  000074  C00B  FFDA         	movff	??_low_isr+10,fsr2h
    96  000078  C00A  FFD9         	movff	??_low_isr+9,fsr2l
    97  00007C  C009  FFE2         	movff	??_low_isr+8,fsr1h
    98  000080  C008  FFE1         	movff	??_low_isr+7,fsr1l
    99  000084  C007  FFEA         	movff	??_low_isr+6,fsr0h
   100  000088  C006  FFE9         	movff	??_low_isr+5,fsr0l
   101  00008C  C005  FFFB         	movff	??_low_isr+4,pclatu
   102  000090  C004  FFFA         	movff	??_low_isr+3,pclath
   103  000094  C003  FFE0         	movff	??_low_isr+2,bsr
   104  000098  C002  FFE8         	movff	??_low_isr+1,wreg
   105  00009C  C001  FFD8         	movff	??_low_isr,status
   106  0000A0  0010               	retfie	
   107  0000A2                     __end_of_low_isr:
   108                           	opt stack 0
   109                           pclatu	equ	0xFFB
   110                           pclath	equ	0xFFA
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           prodh	equ	0xFF4
   116                           prodl	equ	0xFF3
   117                           fsr0h	equ	0xFEA
   118                           fsr0l	equ	0xFE9
   119                           wreg	equ	0xFE8
   120                           fsr1h	equ	0xFE2
   121                           fsr1l	equ	0xFE1
   122                           bsr	equ	0xFE0
   123                           fsr2h	equ	0xFDA
   124                           fsr2l	equ	0xFD9
   125                           status	equ	0xFD8
   126                           
   127                           	psect	cinit
   128  000236                     __pcinit:
   129                           	opt stack 0
   130  000236                     start_initialization:
   131                           	opt stack 0
   132  000236                     __initialization:
   133                           	opt stack 0
   134                           
   135                           ; Clear objects allocated to COMRAM (11 bytes)
   136  000236  EE00  F02A         	lfsr	0,__pbssCOMRAM
   137  00023A  0E0B               	movlw	11
   138  00023C                     clear_0:
   139  00023C  6AEE               	clrf	postinc0,c
   140  00023E  06E8               	decf	wreg,f,c
   141  000240  E1FD               	bnz	clear_0
   142  000242                     end_of_initialization:
   143                           	opt stack 0
   144  000242                     __end_of__initialization:
   145                           	opt stack 0
   146  000242  0100               	movlb	0
   147  000244  EF24  F001         	goto	_main	;jump to C main() function
   148                           pclatu	equ	0xFFB
   149                           pclath	equ	0xFFA
   150                           tblptru	equ	0xFF8
   151                           tblptrh	equ	0xFF7
   152                           tblptrl	equ	0xFF6
   153                           tablat	equ	0xFF5
   154                           prodh	equ	0xFF4
   155                           prodl	equ	0xFF3
   156                           postinc0	equ	0xFEE
   157                           fsr0h	equ	0xFEA
   158                           fsr0l	equ	0xFE9
   159                           wreg	equ	0xFE8
   160                           fsr1h	equ	0xFE2
   161                           fsr1l	equ	0xFE1
   162                           bsr	equ	0xFE0
   163                           fsr2h	equ	0xFDA
   164                           fsr2l	equ	0xFD9
   165                           status	equ	0xFD8
   166                           
   167                           	psect	bssCOMRAM
   168  00002A                     __pbssCOMRAM:
   169                           	opt stack 0
   170  00002A                     _packet:
   171                           	opt stack 0
   172  00002A                     	ds	7
   173  000031                     _count:
   174                           	opt stack 0
   175  000031                     	ds	2
   176  000033                     _Received_Value:
   177                           	opt stack 0
   178  000033                     	ds	1
   179  000034                     _update_flag_uart:
   180                           	opt stack 0
   181  000034                     	ds	1
   182                           pclatu	equ	0xFFB
   183                           pclath	equ	0xFFA
   184                           tblptru	equ	0xFF8
   185                           tblptrh	equ	0xFF7
   186                           tblptrl	equ	0xFF6
   187                           tablat	equ	0xFF5
   188                           prodh	equ	0xFF4
   189                           prodl	equ	0xFF3
   190                           postinc0	equ	0xFEE
   191                           fsr0h	equ	0xFEA
   192                           fsr0l	equ	0xFE9
   193                           wreg	equ	0xFE8
   194                           fsr1h	equ	0xFE2
   195                           fsr1l	equ	0xFE1
   196                           bsr	equ	0xFE0
   197                           fsr2h	equ	0xFDA
   198                           fsr2l	equ	0xFD9
   199                           status	equ	0xFD8
   200                           
   201                           	psect	cstackCOMRAM
   202  000001                     __pcstackCOMRAM:
   203                           	opt stack 0
   204  000001                     ??_low_isr:
   205  000001                     
   206                           ; 0 bytes @ 0x0
   207  000001                     	ds	17
   208  000012                     ??_RX_Interrupt:
   209                           
   210                           ; 0 bytes @ 0x11
   211  000012                     	ds	1
   212  000013                     ??_high_isr:
   213                           
   214                           ; 0 bytes @ 0x12
   215  000013                     	ds	14
   216  000021                     OpenUSART@spbrg:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x20
   220  000021                     	ds	2
   221  000023                     ??_OpenUSART:
   222                           
   223                           ; 0 bytes @ 0x22
   224  000023                     	ds	3
   225  000026                     OpenUSART@config:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x25
   229  000026                     	ds	1
   230  000027                     ??_USART_Init:
   231                           
   232                           ; 0 bytes @ 0x26
   233  000027                     	ds	1
   234  000028                     USART_Init@UART1Config:
   235                           	opt stack 0
   236                           
   237                           ; 1 bytes @ 0x27
   238  000028                     	ds	1
   239  000029                     USART_Init@spbrg:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x28
   243  000029                     	ds	1
   244  00002A                     pclatu	equ	0xFFB
   245                           pclath	equ	0xFFA
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           prodh	equ	0xFF4
   251                           prodl	equ	0xFF3
   252                           postinc0	equ	0xFEE
   253                           fsr0h	equ	0xFEA
   254                           fsr0l	equ	0xFE9
   255                           wreg	equ	0xFE8
   256                           fsr1h	equ	0xFE2
   257                           fsr1l	equ	0xFE1
   258                           bsr	equ	0xFE0
   259                           fsr2h	equ	0xFDA
   260                           fsr2l	equ	0xFD9
   261                           status	equ	0xFD8
   262                           
   263                           ; 0 bytes @ 0x29
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   266 ;;
   267 ;; *************** function _main *****************
   268 ;; Defined at:
   269 ;;		line 34 in file "main.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;		None
   272 ;; Auto vars:     Size  Location     Type
   273 ;;		None
   274 ;; Return value:  Size  Location     Type
   275 ;;		None               void
   276 ;; Registers used:
   277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : 0/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   283 ;;      Params:         0       0       0       0
   284 ;;      Locals:         0       0       0       0
   285 ;;      Temps:          0       0       0       0
   286 ;;      Totals:         0       0       0       0
   287 ;;Total ram usage:        0 bytes
   288 ;; Hardware stack levels required when called:    5
   289 ;; This function calls:
   290 ;;		_ConfigureOscillator
   291 ;;		_InitApp
   292 ;;		_USART_Init
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text0
   299  000248                     __ptext0:
   300                           	opt stack 0
   301  000248                     _main:
   302                           	opt stack 26
   303                           
   304                           ;main.c: 37: ConfigureOscillator();
   305                           
   306                           ;incstack = 0
   307  000248  EC2B  F001         	call	_ConfigureOscillator	;wreg free
   308                           
   309                           ;main.c: 40: InitApp();
   310  00024C  EC2E  F001         	call	_InitApp	;wreg free
   311                           
   312                           ;main.c: 41: USART_Init();
   313  000250  EC04  F001         	call	_USART_Init	;wreg free
   314  000254                     l37:
   315  000254  D7FF               	goto	l37
   316  000256                     __end_of_main:
   317                           	opt stack 0
   318                           pclatu	equ	0xFFB
   319                           pclath	equ	0xFFA
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           prodh	equ	0xFF4
   325                           prodl	equ	0xFF3
   326                           postinc0	equ	0xFEE
   327                           fsr0h	equ	0xFEA
   328                           fsr0l	equ	0xFE9
   329                           wreg	equ	0xFE8
   330                           fsr1h	equ	0xFE2
   331                           fsr1l	equ	0xFE1
   332                           bsr	equ	0xFE0
   333                           fsr2h	equ	0xFDA
   334                           fsr2l	equ	0xFD9
   335                           status	equ	0xFD8
   336                           
   337 ;; *************** function _USART_Init *****************
   338 ;; Defined at:
   339 ;;		line 5 in file "USART.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;  spbrg           1   40[COMRAM] unsigned char 
   344 ;;  UART1Config     1   39[COMRAM] unsigned char 
   345 ;; Return value:  Size  Location     Type
   346 ;;		None               void
   347 ;; Registers used:
   348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   354 ;;      Params:         0       0       0       0
   355 ;;      Locals:         2       0       0       0
   356 ;;      Temps:          1       0       0       0
   357 ;;      Totals:         3       0       0       0
   358 ;;Total ram usage:        3 bytes
   359 ;; Hardware stack levels used:    1
   360 ;; Hardware stack levels required when called:    4
   361 ;; This function calls:
   362 ;;		_OpenUSART
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text1
   369  000208                     __ptext1:
   370                           	opt stack 0
   371  000208                     _USART_Init:
   372                           	opt stack 26
   373                           
   374                           ;USART.c: 7: unsigned char UART1Config = 0b01111111 &
   375                           ;USART.c: 8: 0b11111111 &
   376                           ;USART.c: 9: 0b11111110 &
   377                           ;USART.c: 10: 0b11111101 &
   378                           ;USART.c: 11: 0b11111111 &
   379                           ;USART.c: 12: 0b11011111 ;
   380                           
   381                           ;incstack = 0
   382  000208  6E27               	movwf	??_USART_Init& (0+255),c
   383  00020A  0E5C               	movlw	92
   384  00020C  6E28               	movwf	USART_Init@UART1Config,c
   385  00020E  5027               	movf	??_USART_Init& (0+255),w,c
   386                           
   387                           ;USART.c: 13: unsigned char spbrg = 51;
   388  000210  6E27               	movwf	??_USART_Init& (0+255),c
   389  000212  0E33               	movlw	51
   390  000214  6E29               	movwf	USART_Init@spbrg,c
   391  000216  5027               	movf	??_USART_Init& (0+255),w,c
   392                           
   393                           ;USART.c: 14: OpenUSART(UART1Config,spbrg);
   394  000218  C029  F021         	movff	USART_Init@spbrg,OpenUSART@spbrg
   395  00021C  6A22               	clrf	OpenUSART@spbrg+1,c
   396  00021E  5028               	movf	USART_Init@UART1Config,w,c
   397  000220  ECCF  F000         	call	_OpenUSART
   398                           
   399                           ;USART.c: 15: PIR1bits.RCIF = 0;
   400  000224  9A9E               	bcf	3998,5,c	;volatile
   401                           
   402                           ;USART.c: 16: IPR1bits.RCIP = 1;
   403  000226  8A9F               	bsf	3999,5,c	;volatile
   404                           
   405                           ;USART.c: 17: PIE1bits.RCIE = 1;
   406  000228  8A9D               	bsf	3997,5,c	;volatile
   407                           
   408                           ;USART.c: 18: INTCONbits.PEIE = 1;
   409  00022A  8CF2               	bsf	intcon,6,c	;volatile
   410                           
   411                           ;USART.c: 19: RCSTAbits.CREN = 1;
   412  00022C  88AB               	bsf	4011,4,c	;volatile
   413                           
   414                           ;USART.c: 20: TRISCbits.RC7 = 1;
   415  00022E  8E94               	bsf	3988,7,c	;volatile
   416                           
   417                           ;USART.c: 21: INTCONbits.GIEL=1;
   418  000230  8CF2               	bsf	intcon,6,c	;volatile
   419                           
   420                           ;USART.c: 22: INTCONbits.GIEH=1;
   421  000232  8EF2               	bsf	intcon,7,c	;volatile
   422  000234  0012               	return	
   423  000236                     __end_of_USART_Init:
   424                           	opt stack 0
   425                           pclatu	equ	0xFFB
   426                           pclath	equ	0xFFA
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           prodh	equ	0xFF4
   432                           prodl	equ	0xFF3
   433                           intcon	equ	0xFF2
   434                           postinc0	equ	0xFEE
   435                           fsr0h	equ	0xFEA
   436                           fsr0l	equ	0xFE9
   437                           wreg	equ	0xFE8
   438                           fsr1h	equ	0xFE2
   439                           fsr1l	equ	0xFE1
   440                           bsr	equ	0xFE0
   441                           fsr2h	equ	0xFDA
   442                           fsr2l	equ	0xFD9
   443                           status	equ	0xFD8
   444                           
   445 ;; *************** function _OpenUSART *****************
   446 ;; Defined at:
   447 ;;		line 73 in file "/Applications/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;  config          1    wreg     unsigned char 
   450 ;;  spbrg           2   32[COMRAM] unsigned int 
   451 ;; Auto vars:     Size  Location     Type
   452 ;;  config          1   37[COMRAM] unsigned char 
   453 ;; Return value:  Size  Location     Type
   454 ;;		None               void
   455 ;; Registers used:
   456 ;;		wreg, status,2
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   462 ;;      Params:         2       0       0       0
   463 ;;      Locals:         1       0       0       0
   464 ;;      Temps:          3       0       0       0
   465 ;;      Totals:         6       0       0       0
   466 ;;Total ram usage:        6 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; Hardware stack levels required when called:    3
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_USART_Init
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text2
   477  00019E                     __ptext2:
   478                           	opt stack 0
   479  00019E                     _OpenUSART:
   480                           	opt stack 26
   481                           
   482                           ;incstack = 0
   483                           ;OpenUSART@config stored from wreg
   484  00019E  CFE8 F026          	movff	wreg,OpenUSART@config
   485  0001A2  0E00               	movlw	0
   486  0001A4  6EAC               	movwf	4012,c	;volatile
   487  0001A6  0E00               	movlw	0
   488  0001A8  6EAB               	movwf	4011,c	;volatile
   489  0001AA  B026               	btfsc	OpenUSART@config,0,c
   490  0001AC  88AC               	bsf	4012,4,c	;volatile
   491  0001AE  A226               	btfss	OpenUSART@config,1,c
   492  0001B0  D002               	goto	l770
   493  0001B2  8CAC               	bsf	4012,6,c	;volatile
   494  0001B4  8CAB               	bsf	4011,6,c	;volatile
   495  0001B6                     l770:
   496  0001B6  B426               	btfsc	OpenUSART@config,2,c
   497  0001B8  8EAC               	bsf	4012,7,c	;volatile
   498  0001BA  A626               	btfss	OpenUSART@config,3,c
   499  0001BC  D002               	goto	l105
   500  0001BE  88AB               	bsf	4011,4,c	;volatile
   501  0001C0  D001               	goto	l778
   502  0001C2                     l105:
   503  0001C2  8AAB               	bsf	4011,5,c	;volatile
   504  0001C4                     l778:
   505  0001C4  B826               	btfsc	OpenUSART@config,4,c
   506  0001C6  84AC               	bsf	4012,2,c	;volatile
   507  0001C8  989E               	bcf	3998,4,c	;volatile
   508  0001CA  BA26               	btfsc	OpenUSART@config,5,c
   509  0001CC  86AB               	bsf	4011,3,c	;volatile
   510  0001CE  AC26               	btfss	OpenUSART@config,6,c
   511  0001D0  D002               	goto	l109
   512  0001D2  8A9D               	bsf	3997,5,c	;volatile
   513  0001D4  D001               	goto	l110
   514  0001D6                     l109:
   515  0001D6  9A9D               	bcf	3997,5,c	;volatile
   516  0001D8                     l110:
   517  0001D8  9A9E               	bcf	3998,5,c	;volatile
   518  0001DA  AE26               	btfss	OpenUSART@config,7,c
   519  0001DC  D002               	goto	l111
   520  0001DE  889D               	bsf	3997,4,c	;volatile
   521  0001E0  D001               	goto	l112
   522  0001E2                     l111:
   523  0001E2  989D               	bcf	3997,4,c	;volatile
   524  0001E4                     l112:
   525  0001E4  C021  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   526  0001E8  C022  F023         	movff	OpenUSART@spbrg+1,??_OpenUSART
   527  0001EC  C023  F024         	movff	??_OpenUSART,??_OpenUSART+1
   528  0001F0  6A25               	clrf	(??_OpenUSART+2)& (0+255),c
   529  0001F2  5024               	movf	??_OpenUSART+1,w,c
   530  0001F4  6EB0               	movwf	4016,c	;volatile
   531  0001F6  8AAC               	bsf	4012,5,c	;volatile
   532  0001F8  8EAB               	bsf	4011,7,c	;volatile
   533  0001FA  9C94               	bcf	3988,6,c	;volatile
   534  0001FC  8E94               	bsf	3988,7,c	;volatile
   535  0001FE  B8AC               	btfsc	4012,4,c	;volatile
   536  000200  BEAC               	btfsc	4012,7,c	;volatile
   537  000202  D001               	goto	l114
   538  000204  8C94               	bsf	3988,6,c	;volatile
   539  000206                     l114:
   540  000206  0012               	return	
   541  000208                     __end_of_OpenUSART:
   542                           	opt stack 0
   543                           pclatu	equ	0xFFB
   544                           pclath	equ	0xFFA
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           prodh	equ	0xFF4
   550                           prodl	equ	0xFF3
   551                           intcon	equ	0xFF2
   552                           postinc0	equ	0xFEE
   553                           fsr0h	equ	0xFEA
   554                           fsr0l	equ	0xFE9
   555                           wreg	equ	0xFE8
   556                           fsr1h	equ	0xFE2
   557                           fsr1l	equ	0xFE1
   558                           bsr	equ	0xFE0
   559                           fsr2h	equ	0xFDA
   560                           fsr2l	equ	0xFD9
   561                           status	equ	0xFD8
   562                           
   563 ;; *************** function _InitApp *****************
   564 ;; Defined at:
   565 ;;		line 28 in file "user.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;		None               void
   572 ;; Registers used:
   573 ;;		None
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   579 ;;      Params:         0       0       0       0
   580 ;;      Locals:         0       0       0       0
   581 ;;      Temps:          0       0       0       0
   582 ;;      Totals:         0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    3
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text3
   594  00025C                     __ptext3:
   595                           	opt stack 0
   596  00025C                     _InitApp:
   597                           	opt stack 27
   598                           
   599                           ;incstack = 0
   600  00025C  0012               	return	
   601  00025E                     __end_of_InitApp:
   602                           	opt stack 0
   603                           pclatu	equ	0xFFB
   604                           pclath	equ	0xFFA
   605                           tblptru	equ	0xFF8
   606                           tblptrh	equ	0xFF7
   607                           tblptrl	equ	0xFF6
   608                           tablat	equ	0xFF5
   609                           prodh	equ	0xFF4
   610                           prodl	equ	0xFF3
   611                           intcon	equ	0xFF2
   612                           postinc0	equ	0xFEE
   613                           fsr0h	equ	0xFEA
   614                           fsr0l	equ	0xFE9
   615                           wreg	equ	0xFE8
   616                           fsr1h	equ	0xFE2
   617                           fsr1l	equ	0xFE1
   618                           bsr	equ	0xFE0
   619                           fsr2h	equ	0xFDA
   620                           fsr2l	equ	0xFD9
   621                           status	equ	0xFD8
   622                           
   623 ;; *************** function _ConfigureOscillator *****************
   624 ;; Defined at:
   625 ;;		line 24 in file "system.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;		None               void
   632 ;; Registers used:
   633 ;;		wreg, status,2
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   639 ;;      Params:         0       0       0       0
   640 ;;      Locals:         0       0       0       0
   641 ;;      Temps:          0       0       0       0
   642 ;;      Totals:         0       0       0       0
   643 ;;Total ram usage:        0 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; Hardware stack levels required when called:    3
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text4
   654  000256                     __ptext4:
   655                           	opt stack 0
   656  000256                     _ConfigureOscillator:
   657                           	opt stack 27
   658                           
   659                           ;system.c: 27: OSCCON= 0x70;
   660                           
   661                           ;incstack = 0
   662  000256  0E70               	movlw	112
   663  000258  6ED3               	movwf	4051,c	;volatile
   664  00025A  0012               	return	
   665  00025C                     __end_of_ConfigureOscillator:
   666                           	opt stack 0
   667                           pclatu	equ	0xFFB
   668                           pclath	equ	0xFFA
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           prodh	equ	0xFF4
   674                           prodl	equ	0xFF3
   675                           intcon	equ	0xFF2
   676                           postinc0	equ	0xFEE
   677                           fsr0h	equ	0xFEA
   678                           fsr0l	equ	0xFE9
   679                           wreg	equ	0xFE8
   680                           fsr1h	equ	0xFE2
   681                           fsr1l	equ	0xFE1
   682                           bsr	equ	0xFE0
   683                           fsr2h	equ	0xFDA
   684                           fsr2l	equ	0xFD9
   685                           status	equ	0xFD8
   686                           
   687 ;; *************** function _high_isr *****************
   688 ;; Defined at:
   689 ;;		line 28 in file "interrupts.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;		None               void
   696 ;; Registers used:
   697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   703 ;;      Params:         0       0       0       0
   704 ;;      Locals:         0       0       0       0
   705 ;;      Temps:         14       0       0       0
   706 ;;      Totals:        14       0       0       0
   707 ;;Total ram usage:       14 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    1
   710 ;; This function calls:
   711 ;;		_RX_Interrupt
   712 ;; This function is called by:
   713 ;;		Interrupt level 2
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	intcode
   718  000008                     __pintcode:
   719                           	opt stack 0
   720  000008                     _high_isr:
   721                           	opt stack 26
   722                           
   723                           ;incstack = 0
   724  000008  CFFA F013          	movff	pclath,??_high_isr
   725  00000C  CFFB F014          	movff	pclatu,??_high_isr+1
   726  000010  EF97  F000         	goto	int_func
   727                           pclatu	equ	0xFFB
   728                           pclath	equ	0xFFA
   729                           tblptru	equ	0xFF8
   730                           tblptrh	equ	0xFF7
   731                           tblptrl	equ	0xFF6
   732                           tablat	equ	0xFF5
   733                           prodh	equ	0xFF4
   734                           prodl	equ	0xFF3
   735                           intcon	equ	0xFF2
   736                           postinc0	equ	0xFEE
   737                           fsr0h	equ	0xFEA
   738                           fsr0l	equ	0xFE9
   739                           wreg	equ	0xFE8
   740                           fsr1h	equ	0xFE2
   741                           fsr1l	equ	0xFE1
   742                           bsr	equ	0xFE0
   743                           fsr2h	equ	0xFDA
   744                           fsr2l	equ	0xFD9
   745                           status	equ	0xFD8
   746                           
   747                           	psect	intcode_body
   748  00012E                     __pintcode_body:
   749                           	opt stack 26
   750  00012E                     int_func:
   751                           	opt stack 26
   752  00012E  CFE9 F015          	movff	fsr0l,??_high_isr+2
   753  000132  CFEA F016          	movff	fsr0h,??_high_isr+3
   754  000136  CFE1 F017          	movff	fsr1l,??_high_isr+4
   755  00013A  CFE2 F018          	movff	fsr1h,??_high_isr+5
   756  00013E  CFD9 F019          	movff	fsr2l,??_high_isr+6
   757  000142  CFDA F01A          	movff	fsr2h,??_high_isr+7
   758  000146  CFF3 F01B          	movff	prodl,??_high_isr+8
   759  00014A  CFF4 F01C          	movff	prodh,??_high_isr+9
   760  00014E  CFF6 F01D          	movff	tblptrl,??_high_isr+10
   761  000152  CFF7 F01E          	movff	tblptrh,??_high_isr+11
   762  000156  CFF8 F01F          	movff	tblptru,??_high_isr+12
   763  00015A  CFF5 F020          	movff	tablat,??_high_isr+13
   764                           
   765                           ;interrupts.c: 38: if((PIR1bits.RCIF)){
   766  00015E  BA9E               	btfsc	3998,5,c	;volatile
   767                           
   768                           ;interrupts.c: 39: RX_Interrupt();
   769  000160  EC53  F000         	call	_RX_Interrupt	;wreg free
   770  000164  C020  FFF5         	movff	??_high_isr+13,tablat
   771  000168  C01F  FFF8         	movff	??_high_isr+12,tblptru
   772  00016C  C01E  FFF7         	movff	??_high_isr+11,tblptrh
   773  000170  C01D  FFF6         	movff	??_high_isr+10,tblptrl
   774  000174  C01C  FFF4         	movff	??_high_isr+9,prodh
   775  000178  C01B  FFF3         	movff	??_high_isr+8,prodl
   776  00017C  C01A  FFDA         	movff	??_high_isr+7,fsr2h
   777  000180  C019  FFD9         	movff	??_high_isr+6,fsr2l
   778  000184  C018  FFE2         	movff	??_high_isr+5,fsr1h
   779  000188  C017  FFE1         	movff	??_high_isr+4,fsr1l
   780  00018C  C016  FFEA         	movff	??_high_isr+3,fsr0h
   781  000190  C015  FFE9         	movff	??_high_isr+2,fsr0l
   782  000194  C014  FFFB         	movff	??_high_isr+1,pclatu
   783  000198  C013  FFFA         	movff	??_high_isr,pclath
   784  00019C  0011               	retfie		f
   785  00019E                     __end_of_high_isr:
   786                           	opt stack 0
   787                           pclatu	equ	0xFFB
   788                           pclath	equ	0xFFA
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           prodh	equ	0xFF4
   794                           prodl	equ	0xFF3
   795                           intcon	equ	0xFF2
   796                           postinc0	equ	0xFEE
   797                           fsr0h	equ	0xFEA
   798                           fsr0l	equ	0xFE9
   799                           wreg	equ	0xFE8
   800                           fsr1h	equ	0xFE2
   801                           fsr1l	equ	0xFE1
   802                           bsr	equ	0xFE0
   803                           fsr2h	equ	0xFDA
   804                           fsr2l	equ	0xFD9
   805                           status	equ	0xFD8
   806                           
   807 ;; *************** function _RX_Interrupt *****************
   808 ;; Defined at:
   809 ;;		line 27 in file "USART.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;		None               void
   816 ;; Registers used:
   817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   823 ;;      Params:         0       0       0       0
   824 ;;      Locals:         0       0       0       0
   825 ;;      Temps:          1       0       0       0
   826 ;;      Totals:         1       0       0       0
   827 ;;Total ram usage:        1 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_high_isr
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text7
   837  0000A6                     __ptext7:
   838                           	opt stack 0
   839  0000A6                     _RX_Interrupt:
   840                           	opt stack 26
   841                           
   842                           ;USART.c: 29: Received_Value=RCREG;
   843                           
   844                           ;incstack = 0
   845  0000A6  CFAE F033          	movff	4014,_Received_Value	;volatile
   846                           
   847                           ;USART.c: 31: if(count == 0 && Received_Value == 0x7E){
   848  0000AA  5032               	movf	_count+1,w,c
   849  0000AC  1031               	iorwf	_count,w,c
   850  0000AE  A4D8               	btfss	status,2,c
   851  0000B0  D004               	goto	i2l708
   852  0000B2  5033               	movf	_Received_Value,w,c
   853  0000B4  0A7E               	xorlw	126
   854  0000B6  B4D8               	btfsc	status,2,c
   855  0000B8  D012               	goto	i2u5_40
   856  0000BA                     i2l708:
   857                           
   858                           ;USART.c: 36: }
   859                           ;USART.c: 37: if(count>0 && count <=5){
   860  0000BA  5032               	movf	_count+1,w,c
   861  0000BC  0A80               	xorlw	128
   862  0000BE  0F80               	addlw	-128
   863  0000C0  0E01               	movlw	1
   864  0000C2  B4D8               	btfsc	status,2,c
   865  0000C4  5C31               	subwf	_count,w,c
   866  0000C6  A0D8               	btfss	status,0,c
   867  0000C8  D015               	goto	i2l720
   868  0000CA  5032               	movf	_count+1,w,c
   869  0000CC  0A80               	xorlw	128
   870  0000CE  6EF3               	movwf	prodl,c
   871  0000D0  0E80               	movlw	128
   872  0000D2  5CF3               	subwf	prodl,w,c
   873  0000D4  0E06               	movlw	6
   874  0000D6  B4D8               	btfsc	status,2,c
   875  0000D8  5C31               	subwf	_count,w,c
   876  0000DA  B0D8               	btfsc	status,0,c
   877  0000DC  D00B               	goto	i2l720
   878  0000DE                     i2u5_40:
   879                           
   880                           ;USART.c: 38: packet[count]=(int)Received_Value;
   881  0000DE  0E2A               	movlw	low _packet
   882  0000E0  2431               	addwf	_count,w,c
   883  0000E2  6ED9               	movwf	fsr2l,c
   884  0000E4  0E00               	movlw	high _packet
   885  0000E6  2032               	addwfc	_count+1,w,c
   886  0000E8  6EDA               	movwf	fsr2h,c
   887  0000EA  C033  FFDF         	movff	_Received_Value,indf2
   888                           
   889                           ;USART.c: 39: count++;
   890  0000EE  4A31               	infsnz	_count,f,c
   891  0000F0  2A32               	incf	_count+1,f,c
   892  0000F2  D01B               	goto	i2l81
   893  0000F4                     i2l720:
   894                           
   895                           ;USART.c: 42: }
   896                           ;USART.c: 43: if(count == 6 && Received_Value == 0x9A){
   897  0000F4  5031               	movf	_count,w,c
   898  0000F6  0A06               	xorlw	6
   899  0000F8  1032               	iorwf	_count+1,w,c
   900  0000FA  A4D8               	btfss	status,2,c
   901  0000FC  D016               	goto	i2l81
   902  0000FE  5033               	movf	_Received_Value,w,c
   903  000100  0A9A               	xorlw	154
   904  000102  A4D8               	btfss	status,2,c
   905  000104  D012               	goto	i2l81
   906                           
   907                           ;USART.c: 44: packet[count]=(int)Received_Value;
   908  000106  0E2A               	movlw	low _packet
   909  000108  2431               	addwf	_count,w,c
   910  00010A  6ED9               	movwf	fsr2l,c
   911  00010C  0E00               	movlw	high _packet
   912  00010E  2032               	addwfc	_count+1,w,c
   913  000110  6EDA               	movwf	fsr2h,c
   914  000112  C033  FFDF         	movff	_Received_Value,indf2
   915                           
   916                           ;USART.c: 45: count=0;
   917  000116  0E00               	movlw	0
   918  000118  6E32               	movwf	_count+1,c
   919  00011A  0E00               	movlw	0
   920  00011C  6E31               	movwf	_count,c
   921                           
   922                           ;USART.c: 46: PIR1bits.RCIF=0;
   923  00011E  9A9E               	bcf	3998,5,c	;volatile
   924                           
   925                           ;USART.c: 47: update_flag_uart=1;
   926  000120  6E12               	movwf	??_RX_Interrupt& (0+255),c
   927  000122  0E01               	movlw	1
   928  000124  6E34               	movwf	_update_flag_uart,c
   929  000126  5012               	movf	??_RX_Interrupt& (0+255),w,c
   930  000128  D001               	goto	i2l79
   931  00012A                     i2l81:
   932                           
   933                           ;USART.c: 49: }
   934                           ;USART.c: 50: PIR1bits.RCIF=0;
   935  00012A  9A9E               	bcf	3998,5,c	;volatile
   936  00012C                     i2l79:
   937  00012C  0012               	return	
   938  00012E                     __end_of_RX_Interrupt:
   939                           	opt stack 0
   940  0000                     pclatu	equ	0xFFB
   941                           pclath	equ	0xFFA
   942                           tblptru	equ	0xFF8
   943                           tblptrh	equ	0xFF7
   944                           tblptrl	equ	0xFF6
   945                           tablat	equ	0xFF5
   946                           prodh	equ	0xFF4
   947                           prodl	equ	0xFF3
   948                           intcon	equ	0xFF2
   949                           postinc0	equ	0xFEE
   950                           fsr0h	equ	0xFEA
   951                           fsr0l	equ	0xFE9
   952                           wreg	equ	0xFE8
   953                           fsr1h	equ	0xFE2
   954                           fsr1l	equ	0xFE1
   955                           bsr	equ	0xFE0
   956                           indf2	equ	0xFDF
   957                           fsr2h	equ	0xFDA
   958                           fsr2l	equ	0xFD9
   959                           status	equ	0xFD8
   960                           pclatu	equ	0xFFB
   961                           pclath	equ	0xFFA
   962                           tblptru	equ	0xFF8
   963                           tblptrh	equ	0xFF7
   964                           tblptrl	equ	0xFF6
   965                           tablat	equ	0xFF5
   966                           prodh	equ	0xFF4
   967                           prodl	equ	0xFF3
   968                           intcon	equ	0xFF2
   969                           postinc0	equ	0xFEE
   970                           fsr0h	equ	0xFEA
   971                           fsr0l	equ	0xFE9
   972                           wreg	equ	0xFE8
   973                           fsr1h	equ	0xFE2
   974                           fsr1l	equ	0xFE1
   975                           bsr	equ	0xFE0
   976                           indf2	equ	0xFDF
   977                           fsr2h	equ	0xFDA
   978                           fsr2l	equ	0xFD9
   979                           status	equ	0xFD8
   980                           
   981                           	psect	rparam
   982  0000                     pclatu	equ	0xFFB
   983                           pclath	equ	0xFFA
   984                           tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           prodh	equ	0xFF4
   989                           prodl	equ	0xFF3
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           fsr0h	equ	0xFEA
   993                           fsr0l	equ	0xFE9
   994                           wreg	equ	0xFE8
   995                           fsr1h	equ	0xFE2
   996                           fsr1l	equ	0xFE1
   997                           bsr	equ	0xFE0
   998                           indf2	equ	0xFDF
   999                           fsr2h	equ	0xFDA
  1000                           fsr2l	equ	0xFD9
  1001                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     41      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_USART_Init
    _USART_Init->_OpenUSART

Critical Paths under _high_isr in COMRAM

    _high_isr->_RX_Interrupt

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     214
                _ConfigureOscillator
                            _InitApp
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           3     3      0     214
                                             38 COMRAM     3     3      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     184
                                             32 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            14    14      0       0
                                             18 COMRAM    14    14      0
                       _RX_Interrupt
 ---------------------------------------------------------------------------------
 (5) _RX_Interrupt                                         1     1      0       0
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _USART_Init
     _OpenUSART

 _low_isr (ROOT)

 _high_isr (ROOT)
   _RX_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     29      34       1       54.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34       3        0.0%
DATA                 0      0      34      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri Mar 28 14:24:23 2014

                          l37 0254                            bsr 000FE0                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_LVP$ON 000000                           l110 01D8                           l111 01E2  
                         l112 01E4                           l105 01C2                           l114 0206  
                         l109 01D6                           l770 01B6                           l778 01C4  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           wreg 000FE8  
                __CFG_IESO$ON 000000                  __CFG_OSC$IRC 000000          __end_of_RX_Interrupt 012E  
                        i2l81 012A                          i2l79 012C                 __CFG_FCMEN$ON 000000  
                        _main 0248              _update_flag_uart 0034                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        pclat 000FFA                 __CFG_BOREN$ON 000000                          prodh 000FF4  
                        prodl 000FF3                          start 00A2                 __CFG_MCLRE$ON 000000  
             __end_of_InitApp 025E                         ?_main 0001                         i2l720 00F4  
                       i2l708 00BA                         _RCREG 000FAE                         _RCSTA 000FAB  
                       _SPBRG 000FAF                         _TXSTA 000FAC           _ConfigureOscillator 0256  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _count 0031               __end_of_low_isr 00A2                         tablat 000FF5  
                       status 000FD8          ?_ConfigureOscillator 0001                   ?_USART_Init 0001  
             __initialization 0236                __CFG_HPOL$HIGH 000000                  __end_of_main 0256  
              __CFG_LPOL$HIGH 000000                        ??_main 002A                 __activetblptr 000000  
              __CFG_WDTEN$OFF 000000                        _OSCCON 000FD3                __CFG_WINEN$OFF 000000  
                      _SPBRGH 000FB0                        i2u5_40 00DE                     ??_InitApp 0021  
       ??_ConfigureOscillator 0021              __end_of_high_isr 019E            __size_of_OpenUSART 006A  
              __CFG_STVREN$ON 000000                        _packet 002A                        clear_0 023C  
       __size_of_RX_Interrupt 0088                     ??_low_isr 0001                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8           __size_of_USART_Init 002E  
                  __accesstop 0060       __end_of__initialization 0242               __CFG_T1OSCMX$ON 000000  
              __pcstackCOMRAM 0001                  _RX_Interrupt 00A6             __end_of_OpenUSART 0208  
       USART_Init@UART1Config 0028               __CFG_WDPS$32768 000000                     ?_high_isr 0001  
             __CFG_PWMPIN$OFF 000000                       _InitApp 025C               __CFG_PWRTEN$OFF 000000  
                ??_USART_Init 0027                       __Hparam 0000                       __Lparam 0000  
                     __pcinit 0236                       __ramtop 0300                       __ptext0 0248  
                     __ptext1 0208                       __ptext2 019E                       __ptext3 025C  
                     __ptext4 0256                       __ptext7 00A6                       _low_isr 0018  
          __end_of_USART_Init 0236                    ??_high_isr 0013                __pintcode_body 012E  
        end_of_initialization 0242                       int_func 012E                     _RCSTAbits 000FAB  
                     postinc0 000FEE                     _TRISCbits 000F94   __end_of_ConfigureOscillator 025C  
                   _TXSTAbits 000FAC                _Received_Value 0033           start_initialization 0236  
                   _OpenUSART 019E                   __pbssCOMRAM 002A                    ?_OpenUSART 0021  
           __size_of_high_isr 0196                      ?_InitApp 0001                     __pintcode 0008  
                 __pintcodelo 0018                      ?_low_isr 0001                      _IPR1bits 000F9F  
                    _PIE1bits 000F9D                      _PIR1bits 000F9E                   ??_OpenUSART 0023  
             OpenUSART@config 0026              __size_of_InitApp 0002                      __Hrparam 0000  
                    __Lrparam 0000                 ?_RX_Interrupt 0001              __size_of_low_isr 008A  
                    _high_isr 0008               USART_Init@spbrg 0029                 __size_of_main 000E  
__size_of_ConfigureOscillator 0006                ??_RX_Interrupt 0012                    _INTCONbits 000FF2  
              OpenUSART@spbrg 0021                      intlevel1 0000                      intlevel2 0000  
                  _USART_Init 0208  
